package visao;

import dao.ConvenioDAO;
import dao.PacienteDAO;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;

import modelo.Convenio;
import modelo.Paciente;
import servicos.ConvenioServicos;
import servicos.ServicosFactory;

public class GuiCadPaciente extends javax.swing.JInternalFrame {

    /**
     * Creates new form GuiCadPaciente
     */
    public GuiCadPaciente() {
        initComponents();
        preencherCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jlNome = new javax.swing.JLabel();
        jlCpf = new javax.swing.JLabel();
        jlEndereco = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        jtCpf = new javax.swing.JTextField();
        jtEndereco = new javax.swing.JTextField();
        jlEspecialidade = new javax.swing.JLabel();
        jlDataNasc = new javax.swing.JLabel();
        jtDataNasc = new javax.swing.JTextField();
        jtTelefone = new javax.swing.JTextField();
        jlTelefone = new javax.swing.JLabel();
        jlEmail1 = new javax.swing.JLabel();
        jtEmail = new javax.swing.JTextField();
        jcConvenio = new javax.swing.JComboBox<>();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jbLimpar = new javax.swing.JButton();
        jbCadastrar1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("CADASTRO PACIENTE");

        jLayeredPane1.setBackground(new java.awt.Color(204, 255, 255));
        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLayeredPane1.setOpaque(true);

        jlNome.setText("Nome");
        jLayeredPane1.add(jlNome);
        jlNome.setBounds(40, 20, 60, 30);

        jlCpf.setText("CPF");
        jLayeredPane1.add(jlCpf);
        jlCpf.setBounds(40, 70, 90, 30);

        jlEndereco.setText("Endereço");
        jLayeredPane1.add(jlEndereco);
        jlEndereco.setBounds(40, 120, 60, 30);
        jLayeredPane1.add(jtNome);
        jtNome.setBounds(160, 20, 210, 30);
        jLayeredPane1.add(jtCpf);
        jtCpf.setBounds(160, 70, 110, 30);
        jLayeredPane1.add(jtEndereco);
        jtEndereco.setBounds(160, 120, 210, 30);

        jlEspecialidade.setText("Convênio");
        jLayeredPane1.add(jlEspecialidade);
        jlEspecialidade.setBounds(40, 320, 100, 30);

        jlDataNasc.setText("Data de Nascimento");
        jLayeredPane1.add(jlDataNasc);
        jlDataNasc.setBounds(40, 270, 110, 30);

        jtDataNasc.setToolTipText("(dd/mm/aaaa)");
        jLayeredPane1.add(jtDataNasc);
        jtDataNasc.setBounds(160, 270, 210, 30);

        jtTelefone.setToolTipText("(xx) xxxx-xxxx");
        jLayeredPane1.add(jtTelefone);
        jtTelefone.setBounds(160, 170, 130, 30);

        jlTelefone.setText("Telefone");
        jLayeredPane1.add(jlTelefone);
        jlTelefone.setBounds(40, 170, 50, 30);

        jlEmail1.setText("E-mail");
        jLayeredPane1.add(jlEmail1);
        jlEmail1.setBounds(40, 220, 90, 30);
        jLayeredPane1.add(jtEmail);
        jtEmail.setBounds(160, 220, 210, 30);

        jLayeredPane1.add(jcConvenio);
        jcConvenio.setBounds(160, 320, 150, 30);

        jLayeredPane2.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLayeredPane2.setOpaque(true);

        jbLimpar.setText("limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });
        jLayeredPane2.add(jbLimpar);
        jbLimpar.setBounds(290, 20, 140, 40);

        jbCadastrar1.setText("cadastrar");
        jbCadastrar1.setMinimumSize(new java.awt.Dimension(78, 20));
        jbCadastrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrar1ActionPerformed(evt);
            }
        });
        jLayeredPane2.add(jbCadastrar1);
        jbCadastrar1.setBounds(80, 20, 140, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                    .addComponent(jLayeredPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean Data() {
        String data = jtDataNasc.getText();
        if (data.length() == 10) {
            String[] partesData = data.split("/");
            String dia = partesData[0];
            String mes = partesData[1];
            String ano = partesData[2];
            int anoInt = Integer.parseInt(ano);
            int mesInt = Integer.parseInt(mes);
            int diaInt = Integer.parseInt(dia);
            
            if (mesInt < 1 || mesInt > 12) {
                JOptionPane.showMessageDialog(this, "Este mês é inválido: " + mesInt);
                return false;
            }
            
            if (anoInt < 1950) {
                JOptionPane.showMessageDialog(this, "Este ano é inválido. É muito antigo: " + anoInt);
                return false;
            } else if (anoInt > 2350) {
                JOptionPane.showMessageDialog(this, "Este ano é inválido. Está muito distante: " + anoInt);
                return false;
            }
            
            int[] diasNoMes = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
            if ((anoInt % 4 == 0 && anoInt % 100 != 0) || (anoInt % 400 == 0)) {
                diasNoMes[1] = 29; // Fevereiro em ano bissexto
            }
            
            if (diaInt < 1 || diaInt > diasNoMes[mesInt - 1]) {
                JOptionPane.showMessageDialog(this, "Este dia é inválido: " + diaInt + " para o mês: " + mesInt);
                return false;
            }
            
            return true;
        } else if (data.length() == 0) {
            JOptionPane.showMessageDialog(this, "A data é invalida!");
            return false;
        } else {
            JOptionPane.showMessageDialog(this, "O formato da data esta incorreto!");
            return false;
        }
    }
    
    public boolean CPF() {
        String cpf = jtCpf.getText();
        cpf = cpf.replaceAll("\\D", "");
        
        if (cpf.length() != 11) {
            JOptionPane.showMessageDialog(this, "O CPF é Invalido");
            return false;
        } else {
            return true;
        }
    }
    
    public String CPFformatado() {
        String cpf = jtCpf.getText();
        cpf = cpf.replaceAll("\\D", "");
        
        String cpfF = String.format("%s.%s.%s-%s", cpf.substring(0, 3), cpf.substring(3, 6), cpf.substring(6, 9), cpf.substring(9));
        return cpfF;
    }
    
    public boolean Telefone() {
        String tel = jtTelefone.getText();
        tel = tel.replaceAll("\\D", "");
        
        if (tel.length() != 11) {
            JOptionPane.showMessageDialog(this, "O telefone é Invalido");
            return false;
        } else {
            return true;
        }
    }
    
    public String TelefoneFormatado() {
        String tel = jtTelefone.getText();
        tel = tel.replaceAll("\\D", "");
        
        String telF = String.format("(%s)%s-%s", tel.substring(0, 2), tel.substring(2, 7), tel.substring(7));
        return telF;
    }
    
    public boolean Nome() {
        String nome = jtNome.getText();
        
        if (nome.length() < 1 || nome.length() > 55) {
            JOptionPane.showMessageDialog(this, "O nome é Invalido");
            return false;
        } else {
            return true;
        }
    }
    
    public boolean Endereco() {
        String endereco = jtEndereco.getText();
        
        if (endereco.length() < 1 || endereco.length() > 55) {
            JOptionPane.showMessageDialog(this, "O endereço é Invalido");
            return false;
        } else {
            return true;
        }
    }
    
    public boolean Convenio() {
        if (!(jcConvenio.getSelectedIndex() == 0)) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um convenio");
            return false;
        } // fecha else
    }
    
    public boolean Email() {
        String email = jtEmail.getText();

        // Remove todos os caracteres, exceto '@'
        if (email != null) {
            // Remove todos os caracteres, exceto '@'
            String emailAdapt = email.replaceAll("[^@]", "");
            
            if (emailAdapt.length() == 1) {
                return true;
            } else if ("".equals(email)) {
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "Email está incorreto!");
                return false;
            }
            
        } else {
            return true;
        }
    }
    
    private boolean cadastrar() {
        if (Nome() && CPF() && Endereco() && Telefone() && Email() && Data() && Convenio()) {
            try {
                
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                
                Paciente pac = new Paciente();

                // Atribuindo valores aos atributos do Paciente com base nos campos preenchidos pelo usuário na tela
                pac.setNome(jtNome.getText());
                pac.setEndereco(jtEndereco.getText());
                pac.setDataNascimento(sdf.parse(jtDataNasc.getText()));
                pac.setTelefone(TelefoneFormatado());
                pac.setEmail(jtEmail.getText());
                pac.setCpf(CPFformatado());

                // Obtendo o nome do convênio selecionado pelo usuário
                String conv = jcConvenio.getSelectedItem().toString();

                // Criando objeto ConvenioDAO para buscar o convênio no banco de dados
                ConvenioDAO convDAO = new ConvenioDAO();

                // Buscando o convênio no banco de dados com base no nome selecionado pelo usuário
                Convenio convenio = convDAO.buscarConvenioFiltro(conv);

                // Atribuindo o ID do convênio ao paciente
                pac.setConvenio(convenio.getIdConvenio());

                // Criando objeto PacienteDAO para cadastrar o paciente no banco de dados
                PacienteDAO pacDAO = new PacienteDAO();
                pacDAO.cadastrarPaciente(pac);

                // Mensagem de sucesso
                JOptionPane.showMessageDialog(this, "Paciente cadastrado com sucesso!");
                
                return true;
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "ERRO! " + e.getMessage());
                return false;
            } // fecha catch
        } else {
            return false;
        }
        
    }// fecha método

    // metodo para preencher o combo box com os produtos cadastrados no banco de dados
    private void preencherCombo() {
        try {

            // Buscando objeto ProdutoServicos
            ConvenioServicos ps = ServicosFactory.getConvenioServicos();

            /*
             * Criando um ArrayList<ProdutoVO> vazio
             * para receber o ArrayList com os dados
             */
            ArrayList<Convenio> p = new ArrayList<>();

            // Recebendo o ArrayList cheio em produtos
            p = ps.buscarConvenio();

            // Adicionando os dados do ArrayList no JComboBox
            jcConvenio.addItem("-Selecione-");
            for (int i = 0; i < p.size(); i++) {

                // Adicionando o nome do convênio ao JComboBox
                jcConvenio.addItem(p.get(i).getNomeConvenio());
                
            } // fecha for

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro! " + e.getMessage());
        } // fecha catch
    }// fecha classe

    public void limpar() {
        jtCpf.setText("");
        jtDataNasc.setText("");
        jtEmail.setText("");
        jtEndereco.setText("");
        jtNome.setText("");
        jtTelefone.setText("");
        jcConvenio.setSelectedIndex(0);
    }

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {
        limpar();
    }
    
    private void jbCadastrar1ActionPerformed(java.awt.event.ActionEvent evt) {
        if (cadastrar()) {
            limpar();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JButton jbCadastrar1;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JComboBox<String> jcConvenio;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLabel jlDataNasc;
    private javax.swing.JLabel jlEmail1;
    private javax.swing.JLabel jlEndereco;
    private javax.swing.JLabel jlEspecialidade;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlTelefone;
    private javax.swing.JTextField jtCpf;
    private javax.swing.JTextField jtDataNasc;
    private javax.swing.JTextField jtEmail;
    private javax.swing.JTextField jtEndereco;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtTelefone;
    // End of variables declaration//GEN-END:variables
}
